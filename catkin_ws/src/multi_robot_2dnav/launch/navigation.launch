<?xml version="1.0" encoding="UTF-8"?>

<launch>
    <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

    <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
    <arg name="gui" default="true"/>
    <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
    <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 
    <arg name="map_file" default="$(env TURTLEBOT_GAZEBO_MAP_FILE)"/>

    <!-- Gazebo World -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>    

    <!-- Robots -->
    <group ns="robot1">
        <arg name="robot_name" value="robot1"/>

        <include file="$(find multi_robot)/launch/includes/single_robot.launch">
            <arg name="base" value="$(arg base)"/>
            <arg name="stacks" value="$(arg stacks)"/>
            <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
            <arg name="robot_name" value="$(arg robot_name)"/>
            <arg name="init_pose" value="-x 0 -y 1 -z 0"/>
        </include>
    </group>
    
    <group ns="robot2">
        <arg name="robot_name" value="robot2"/>

        <include file="$(find multi_robot)/launch/includes/single_robot.launch">
            <arg name="base" value="$(arg base)"/>
            <arg name="stacks" value="$(arg stacks)"/>
            <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
            <arg name="robot_name" value="$(arg robot_name)"/>
            <arg name="init_pose" value="-x 0 -y 3 -z 0"/>
        </include>
    </group>
</launch>
